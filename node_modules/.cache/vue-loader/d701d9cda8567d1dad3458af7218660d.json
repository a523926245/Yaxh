{"remainingRequest":"E:\\exercises\\Yui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\exercises\\Yui\\src\\components\\popup\\popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\exercises\\Yui\\src\\components\\popup\\popup.vue","mtime":1565862740892},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport { PopupMixin } from \"@/mixin/popup\";\r\nexport default {\r\n    name:\"yPopup\",\r\n    mixins:[PopupMixin],\r\n    props:{\r\n        position:{\r\n            type:String,\r\n            default:'center'\r\n        },\r\n        value:{\r\n            type:Boolean,\r\n            default:false\r\n        }\r\n    },\r\n    watch:{\r\n        value:{\r\n            handler(val){\r\n                const type = val ? 'open' : 'close';\r\n                this[type]();\r\n            }\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["popup.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"popup.vue","sourceRoot":"src/components/popup","sourcesContent":["<template>\r\n    <div v-show=\"value\" class=\"y-popup\" :class=\"[position ? 'y-popup--'+position : '']\">\r\n        <slot>\r\n            <div></div>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { PopupMixin } from \"@/mixin/popup\";\r\nexport default {\r\n    name:\"yPopup\",\r\n    mixins:[PopupMixin],\r\n    props:{\r\n        position:{\r\n            type:String,\r\n            default:'center'\r\n        },\r\n        value:{\r\n            type:Boolean,\r\n            default:false\r\n        }\r\n    },\r\n    watch:{\r\n        value:{\r\n            handler(val){\r\n                const type = val ? 'open' : 'close';\r\n                this[type]();\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}