{"remainingRequest":"E:\\exercises\\vue-project\\node_modules\\thread-loader\\dist\\cjs.js!E:\\exercises\\vue-project\\node_modules\\babel-loader\\lib\\index.js!E:\\exercises\\vue-project\\src\\utils\\httpRequest.js","dependencies":[{"path":"E:\\exercises\\vue-project\\src\\utils\\httpRequest.js","mtime":1563868646730},{"path":"E:\\exercises\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\vue-project\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\vue-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport http from \"axios\";\nhttp.defaults.timeout = 10000; // http.defaults.withCredentials = true;\n\nhttp.defaults.baseURL = \"http://127.0.0.1:8089\";\nhttp.interceptors.request.use(function (config) {\n  if (config.method == 'get') {\n    config.params = config.data;\n  }\n\n  if (config.formUrlencoded) {\n    if (config.method == 'post') {\n      config.data = Qs.stringify(config.data);\n    }\n  } else {\n    if (config.method == 'post') {\n      config.data = config.data;\n    }\n  }\n\n  return config;\n});\nhttp.interceptors.response.use(function (response) {\n  return Promise.resolve(response);\n});\n\nvar httpRequest = function httpRequest(methods, url, data) {\n  return new Promise(function (resolve, reject) {\n    http.request({\n      method: methods,\n      url: url,\n      data: data\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nexport default httpRequest;",null]}