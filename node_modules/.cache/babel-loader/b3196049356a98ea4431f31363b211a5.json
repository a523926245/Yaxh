{"remainingRequest":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js!E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\exercises\\Yui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\exercises\\Yui\\src\\components\\swiper_cell\\swiper_cell.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\exercises\\Yui\\src\\components\\swiper_cell\\swiper_cell.vue","mtime":1565163449925},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport cell from \"@/components/cell/cell\";\n\nname: \"swiperCell\";\n\nexport default {\n  components: {\n    cell: cell\n  },\n  props: {\n    // 是否禁用滑动\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 指定滑动区域宽度\n    offset: {\n      type: [String, Number],\n      default: 50\n    }\n  },\n  data: function data() {\n    return {\n      // 鼠标拖动距离\n      drapX: 0,\n      // 开始touch鼠标坐标\n      offsetSatrtX: 0,\n      // 结束touch鼠标坐标\n      offsetEndX: 0,\n      // 是否动画中\n      dragged: 0\n    };\n  },\n  methods: {\n    clickEvent: function clickEvent(e) {\n      this.checkIsSwipered();\n      console.log(1);\n    },\n    // 监听滑动开始\n    moveStart: function moveStart(e) {\n      this.checkIsSwipered(); // 禁用滑动\n\n      if (this.disabled) {\n        return;\n      }\n\n      this.offsetSatrtX = e.changedTouches[0].clientX;\n    },\n    // 监听滑动结束\n    moveEnd: function moveEnd(e) {\n      var parentDom = e.currentTarget.parentElement; // 禁用滑动\n\n      if (this.disabled) {\n        return;\n      }\n\n      this.offsetEndX = e.changedTouches[0].clientX; // 左滑\n\n      if (this.offsetSatrtX > this.offsetEndX) {\n        // touch拖动距离大于设定值，swiper_cell滑动\n        this.drapX = this.offsetSatrtX - this.offsetEndX;\n\n        if (this.drapX >= this.offset) {\n          var rightWidth = this.$refs.right.clientWidth;\n          this.swiperMove(e.currentTarget, rightWidth, 0, 0);\n        }\n      } // 右滑收起cell\n      else {\n          this.swiperMove(e.currentTarget, 0, 0, 0);\n          this.drapX = 0;\n        }\n\n      parentDom.dataset.dragged = this.dragged;\n    },\n    // 检查是否有其他滑动的元素\n    checkIsSwipered: function checkIsSwipered() {\n      var swiperList = document.querySelectorAll(\".swiper_cell\");\n\n      for (var i = 0; i < swiperList.length; i++) {\n        if (swiperList[i].dataset.dragged == 1) {\n          var childDdom = swiperList[i].children[0];\n          this.swiperMove(childDdom, 0, 0, 0);\n        }\n      }\n    },\n\n    /**\r\n     * swiper滑动器\r\n     * {x}[Number,String]x轴位移距离\r\n     * {y}[Number,String]y轴位移距离\r\n     * {z}[Number,String]z轴位移距离\r\n     */\n    swiperMove: function swiperMove(el, x, y, z) {\n      if (x > 0) {\n        this.dragged = 1;\n      } else {\n        this.dragged = 0;\n      }\n\n      el.style['transform'] = \"translate3D(\".concat(-x, \"px,0,0)\");\n    },\n    // 监听diolog关闭事件-----响应删除\n    onClose: function onClose() {\n      console.log(\"oncolose\");\n    }\n  }\n};",{"version":3,"sources":["swiper_cell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"swiper_cell\" >\r\n        <div ref=\"swiper_cell\" class=\"swiper_cell_wrapper\" @touchstart=\"moveStart\" @touchend=\"moveEnd\" @click=\"clickEvent\">\r\n            <slot>\r\n                <cell title=\"标题2\"></cell>\r\n            </slot>\r\n            <div v-if=\"$slots.right\" ref=\"right\" class=\"swiper_cell_right\">\r\n                <slot name=\"right\">\r\n                    <span class=\"edit\">修改</span>\r\n                    <span class=\"delete\">删除</span>\r\n                </slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport cell from \"@/components/cell/cell\";\r\nname:\"swiperCell\"\r\nexport default {\r\n    components:{\r\n        cell\r\n    },\r\n    props:{\r\n        // 是否禁用滑动\r\n        disabled:{\r\n            type:Boolean,\r\n            default:false\r\n        },\r\n        // 指定滑动区域宽度\r\n        offset:{\r\n            type:[String,Number],\r\n            default:50\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            // 鼠标拖动距离\r\n            drapX:0,\r\n            // 开始touch鼠标坐标\r\n            offsetSatrtX:0,\r\n            // 结束touch鼠标坐标\r\n            offsetEndX:0,\r\n            // 是否动画中\r\n            dragged:0,\r\n\r\n        }\r\n    },\r\n    methods:{\r\n        clickEvent(e){\r\n            this.checkIsSwipered()\r\n            console.log(1)\r\n        },\r\n        // 监听滑动开始\r\n        moveStart(e){\r\n            this.checkIsSwipered()\r\n            // 禁用滑动\r\n            if(this.disabled){\r\n                return ;\r\n            }\r\n            this.offsetSatrtX = e.changedTouches[0].clientX;\r\n        },\r\n        // 监听滑动结束\r\n        moveEnd(e){\r\n            let parentDom = e.currentTarget.parentElement;\r\n            // 禁用滑动\r\n            if(this.disabled){\r\n                return ;\r\n            }\r\n            this.offsetEndX = e.changedTouches[0].clientX;\r\n            // 左滑\r\n            if(this.offsetSatrtX > this.offsetEndX){\r\n                // touch拖动距离大于设定值，swiper_cell滑动\r\n                this.drapX = this.offsetSatrtX - this.offsetEndX;\r\n                if(this.drapX >= this.offset){\r\n                    let rightWidth = this.$refs.right.clientWidth\r\n                    this.swiperMove(e.currentTarget,rightWidth,0,0)\r\n                }\r\n            }\r\n            // 右滑收起cell\r\n            else{\r\n                this.swiperMove(e.currentTarget,0,0,0)\r\n                this.drapX = 0;\r\n            }\r\n            parentDom.dataset.dragged = this.dragged\r\n            \r\n        },\r\n        // 检查是否有其他滑动的元素\r\n        checkIsSwipered(){\r\n            let swiperList = document.querySelectorAll(\".swiper_cell\")\r\n            \r\n            for(let i = 0; i < swiperList.length ;i++){\r\n                if(swiperList[i].dataset.dragged == 1 ){\r\n                    let childDdom = swiperList[i].children[0]\r\n                    this.swiperMove(childDdom,0,0,0)\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * swiper滑动器\r\n         * {x}[Number,String]x轴位移距离\r\n         * {y}[Number,String]y轴位移距离\r\n         * {z}[Number,String]z轴位移距离\r\n         */\r\n        swiperMove(el,x,y,z){\r\n            if(x > 0){\r\n                this.dragged = 1\r\n            }\r\n            else{\r\n                this.dragged = 0\r\n            }\r\n            el.style['transform']=`translate3D(${-x}px,0,0)`;\r\n        },\r\n        // 监听diolog关闭事件-----响应删除\r\n        onClose(){\r\n            console.log(\"oncolose\")\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.swiper_cell{\r\n    overflow: hidden;\r\n    position: relative;\r\n}\r\n.swiper_cell_wrapper{\r\n    transition: all 0.6s cubic-bezier(0.18, 0.89, 0.32, 1) 0s;\r\n    transform: translate3D(0,0,0)\r\n}\r\n.swiper_cell_right{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    right: 0;\r\n    transform: translate3D(100%,0,0);\r\n    color:#333;\r\n    span{\r\n        display: inline-block;\r\n        padding:10px;\r\n        text-align: center;\r\n        &.edit{\r\n            background: #ff0000;\r\n            color:#fff\r\n        }\r\n        &.delete{\r\n            background: black;\r\n            color:#fff;\r\n        }\r\n    }\r\n    \r\n}\r\n.swiper_cell_right,.swiper_cell_left{\r\n    top: 0;\r\n    height: 100%;\r\n    position: absolute;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/swiper_cell"}]}