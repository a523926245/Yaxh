{"remainingRequest":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js!E:\\exercises\\Yui\\src\\components\\dialog\\index.js","dependencies":[{"path":"E:\\exercises\\Yui\\src\\components\\dialog\\index.js","mtime":1565744714994},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:\\\\exercises\\\\Yui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport vueDialogComponent from \"./dialog\";\nimport Vue from \"vue\";\nimport Mask from \"@/components/mask\";\nvar instance;\nvar defaultOptions = {\n  isShow: true,\n  title: '',\n  content: '',\n  confirmText: '确认',\n  cancelText: '取消',\n  showCancelButton: true,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'reslove' : 'reject'](action);\n  }\n};\nvar dialogConstructor = Vue.extend(vueDialogComponent);\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction createInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n\n  instance = new dialogConstructor({\n    el: document.createElement('div')\n  });\n}\n\nfunction transformOptions(options) {\n  options = _objectSpread({}, defaultOptions, {}, options);\n  return options;\n}\n\nfunction Dialog(options) {\n  return new Promise(function (reslove, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      createInstance();\n    }\n\n    Object.assign(instance, transformOptions(options), {\n      reslove: reslove,\n      reject: reject\n    });\n    console.log(instance);\n    Mask.show();\n  });\n}\n\nDialog.alert = Dialog;\n\nDialog.confirm = function (options) {\n  Dialog(_objectSpread({\n    showCancelButton: true\n  }, options));\n};\n\nexport default Dialog;",{"version":3,"sources":["E:\\exercises\\Yui\\src\\components\\dialog\\index.js"],"names":["vueDialogComponent","Vue","Mask","instance","defaultOptions","isShow","title","content","confirmText","cancelText","showCancelButton","callback","action","dialogConstructor","extend","isInDocument","element","document","body","contains","createInstance","$destroy","el","createElement","transformOptions","options","Dialog","Promise","reslove","reject","$el","Object","assign","console","log","show","alert","confirm"],"mappings":";;;;;;;;;AAAA,OAAOA,kBAAP;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAIC,QAAJ;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAC,IADY;AAEnBC,EAAAA,KAAK,EAAC,EAFa;AAGnBC,EAAAA,OAAO,EAAC,EAHW;AAInBC,EAAAA,WAAW,EAAC,IAJO;AAKnBC,EAAAA,UAAU,EAAC,IALQ;AAMnBC,EAAAA,gBAAgB,EAAC,IANE;AAOnBC,EAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChBT,IAAAA,QAAQ,CAACS,MAAM,KAAK,SAAX,GAAuB,SAAvB,GAAmC,QAApC,CAAR,CAAsDA,MAAtD;AACH;AATkB,CAAvB;AAWA,IAAMC,iBAAiB,GAAGZ,GAAG,CAACa,MAAJ,CAAWd,kBAAX,CAA1B;;AAEA,SAASe,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B,SAAOC,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBH,OAAvB,CAAP;AACH;;AAED,SAASI,cAAT,GAAyB;AACrB,MAAGjB,QAAH,EAAY;AACRA,IAAAA,QAAQ,CAACkB,QAAT;AACH;;AACDlB,EAAAA,QAAQ,GAAG,IAAIU,iBAAJ,CAAsB;AAC7BS,IAAAA,EAAE,EAACL,QAAQ,CAACM,aAAT,CAAuB,KAAvB;AAD0B,GAAtB,CAAX;AAGH;;AAED,SAASC,gBAAT,CAA0BC,OAA1B,EAAkC;AAC9BA,EAAAA,OAAO,qBACArB,cADA,MAEAqB,OAFA,CAAP;AAIA,SAAOA,OAAP;AACH;;AAED,SAASC,MAAT,CAAgBD,OAAhB,EAAwB;AACpB,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAmB;AAClC,QAAG,CAAC1B,QAAD,IAAa,CAACY,YAAY,CAACZ,QAAQ,CAAC2B,GAAV,CAA7B,EAA4C;AACxCV,MAAAA,cAAc;AACjB;;AACDW,IAAAA,MAAM,CAACC,MAAP,CAAc7B,QAAd,EAAuBqB,gBAAgB,CAACC,OAAD,CAAvC,EAAiD;AAC7CG,MAAAA,OAAO,EAAPA,OAD6C;AAE7CC,MAAAA,MAAM,EAANA;AAF6C,KAAjD;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY/B,QAAZ;AACAD,IAAAA,IAAI,CAACiC,IAAL;AACH,GAVM,CAAP;AAWH;;AACDT,MAAM,CAACU,KAAP,GAAeV,MAAf;;AACAA,MAAM,CAACW,OAAP,GAAiB,UAAAZ,OAAO,EAAG;AACvBC,EAAAA,MAAM;AACFhB,IAAAA,gBAAgB,EAAE;AADhB,KAECe,OAFD,EAAN;AAIH,CALD;;AAOA,eAAeC,MAAf","sourcesContent":["import vueDialogComponent from \"./dialog\";\r\nimport Vue from \"vue\";\r\nimport Mask from \"@/components/mask\";\r\n\r\nlet instance;\r\nconst defaultOptions = {\r\n    isShow:true,\r\n    title:'',\r\n    content:'',\r\n    confirmText:'确认',\r\n    cancelText:'取消',\r\n    showCancelButton:true,\r\n    callback: action => {\r\n        instance[action === 'confirm' ? 'reslove' : 'reject'](action);\r\n    }\r\n}\r\nconst dialogConstructor = Vue.extend(vueDialogComponent);\r\n\r\nfunction isInDocument(element) {\r\n    return document.body.contains(element);\r\n}\r\n\r\nfunction createInstance(){\r\n    if(instance){\r\n        instance.$destroy()\r\n    }\r\n    instance = new dialogConstructor({\r\n        el:document.createElement('div')\r\n    })\r\n}\r\n\r\nfunction transformOptions(options){\r\n    options = {\r\n        ...defaultOptions,\r\n        ...options\r\n    }\r\n    return options\r\n}\r\n\r\nfunction Dialog(options){\r\n    return new Promise((reslove,reject) =>{\r\n        if(!instance || !isInDocument(instance.$el)){\r\n            createInstance()\r\n        }\r\n        Object.assign(instance,transformOptions(options),{\r\n            reslove,\r\n            reject\r\n        })\r\n        console.log(instance)\r\n        Mask.show()\r\n    })\r\n}\r\nDialog.alert = Dialog;\r\nDialog.confirm = options =>{\r\n    Dialog({\r\n        showCancelButton: true,\r\n        ...options\r\n      });\r\n}\r\n\r\nexport default Dialog;\r\n\r\n"]}]}