{"remainingRequest":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js!E:\\exercises\\Yui\\src\\components\\toast\\index.js","dependencies":[{"path":"E:\\exercises\\Yui\\src\\components\\toast\\index.js","mtime":1565342205314},{"path":"E:\\exercises\\Yui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\Yui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:\\\\exercises\\\\Yui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from 'vue';\nimport { isObj } from \"@/utils/utils\";\nimport vueTostComponent from \"./toast.vue\";\nvar defaultOptions = {\n  icon: '',\n  mask: false,\n  message: '',\n  duration: 3000,\n  isShow: true\n};\nvar queue = []; // 实例化组件构造器\n\nvar toastConstructor = Vue.extend(vueTostComponent); // 实例化toast组件\n\nfunction createInstance() {\n  var toast = new toastConstructor({\n    el: document.createElement('div')\n  });\n  return toast;\n} // 处理toast参数\n\n\nfunction transformOptions(options) {\n  options = _objectSpread({}, defaultOptions, {}, parseOptions(options));\n  return options;\n} // text模式支持只输入文字\n\n\nfunction parseOptions(options) {\n  if (isObj(options)) {\n    return options;\n  }\n\n  return {\n    message: options\n  };\n} // toast暴露\n\n\nfunction Toast(options) {\n  var instance = createInstance(); // 浅拷贝toast参数到组件本身等于下面的操作------\n  // 赋值给instance,即给组件data赋值\n  // const toast = new toastConstructor({\n  //     el:document.createElement('div'),\n  //     data(){\n  //         return{\n  //             ...options\n  //         }\n  //     }\n  // })\n\n  Object.assign(instance, transformOptions(options));\n  document.body.appendChild(instance.$el);\n  Vue.nextTick(function () {\n    setTimeout(function () {\n      instance.isShow = false;\n    }, instance.duration);\n  });\n}\n\nexport default Toast;",{"version":3,"sources":["E:\\exercises\\Yui\\src\\components\\toast\\index.js"],"names":["Vue","isObj","vueTostComponent","defaultOptions","icon","mask","message","duration","isShow","queue","toastConstructor","extend","createInstance","toast","el","document","createElement","transformOptions","options","parseOptions","Toast","instance","Object","assign","body","appendChild","$el","nextTick","setTimeout"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,OAAOC,gBAAP;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,IAAI,EAAC,KAFc;AAGnBC,EAAAA,OAAO,EAAC,EAHW;AAInBC,EAAAA,QAAQ,EAAC,IAJU;AAKnBC,EAAAA,MAAM,EAAC;AALY,CAAvB;AAOA,IAAIC,KAAK,GAAG,EAAZ,C,CAEA;;AACA,IAAMC,gBAAgB,GAAIV,GAAG,CAACW,MAAJ,CAAWT,gBAAX,CAA1B,C,CAEA;;AACA,SAASU,cAAT,GAAyB;AACrB,MAAMC,KAAK,GAAG,IAAIH,gBAAJ,CAAqB;AAC/BI,IAAAA,EAAE,EAACC,QAAQ,CAACC,aAAT,CAAuB,KAAvB;AAD4B,GAArB,CAAd;AAGA,SAAOH,KAAP;AACH,C,CACD;;;AACA,SAASI,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/BA,EAAAA,OAAO,qBACAf,cADA,MAEAgB,YAAY,CAACD,OAAD,CAFZ,CAAP;AAIA,SAAOA,OAAP;AACH,C,CACD;;;AACA,SAASC,YAAT,CAAsBD,OAAtB,EAA8B;AAC1B,MAAGjB,KAAK,CAACiB,OAAD,CAAR,EAAkB;AACd,WAAOA,OAAP;AACH;;AACD,SAAO;AAACZ,IAAAA,OAAO,EAACY;AAAT,GAAP;AACH,C,CACD;;;AACA,SAASE,KAAT,CAAeF,OAAf,EAAuB;AACnB,MAAIG,QAAQ,GAAGT,cAAc,EAA7B,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAU,EAAAA,MAAM,CAACC,MAAP,CAAcF,QAAd,EAAwBJ,gBAAgB,CAACC,OAAD,CAAxC;AACAH,EAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BJ,QAAQ,CAACK,GAAnC;AAEA1B,EAAAA,GAAG,CAAC2B,QAAJ,CAAa,YAAK;AACdC,IAAAA,UAAU,CAAC,YAAK;AACZP,MAAAA,QAAQ,CAACb,MAAT,GAAkB,KAAlB;AACH,KAFS,EAERa,QAAQ,CAACd,QAFD,CAAV;AAGH,GAJD;AAKH;;AACD,eAAea,KAAf","sourcesContent":["import Vue from 'vue';\r\nimport {isObj} from \"@/utils/utils\";\r\nimport vueTostComponent from \"./toast.vue\";\r\nconst defaultOptions = {\r\n    icon:'',\r\n    mask:false,\r\n    message:'',\r\n    duration:3000,\r\n    isShow:true\r\n}\r\nlet queue = [];\r\n\r\n// 实例化组件构造器\r\nconst toastConstructor  = Vue.extend(vueTostComponent)\r\n\r\n// 实例化toast组件\r\nfunction createInstance(){\r\n    const toast = new toastConstructor({\r\n        el:document.createElement('div')\r\n    })\r\n    return toast\r\n}\r\n// 处理toast参数\r\nfunction transformOptions(options) {\r\n    options = {\r\n        ...defaultOptions,\r\n        ...parseOptions(options),\r\n    }\r\n    return options;\r\n}\r\n// text模式支持只输入文字\r\nfunction parseOptions(options){\r\n    if(isObj(options)){\r\n        return options\r\n    }\r\n    return {message:options}\r\n}\r\n// toast暴露\r\nfunction Toast(options){\r\n    let instance = createInstance()\r\n    // 浅拷贝toast参数到组件本身等于下面的操作------\r\n    // 赋值给instance,即给组件data赋值\r\n    // const toast = new toastConstructor({\r\n    //     el:document.createElement('div'),\r\n    //     data(){\r\n    //         return{\r\n    //             ...options\r\n    //         }\r\n    //     }\r\n    // })\r\n    Object.assign(instance, transformOptions(options));\r\n    document.body.appendChild(instance.$el)\r\n\r\n    Vue.nextTick(() =>{\r\n        setTimeout(() =>{\r\n            instance.isShow = false;\r\n        },instance.duration)\r\n    });\r\n}\r\nexport default Toast;"]}]}