{"remainingRequest":"E:\\exercises\\vue-project\\node_modules\\babel-loader\\lib\\index.js!E:\\exercises\\vue-project\\src\\utils\\httpRequest.js","dependencies":[{"path":"E:\\exercises\\vue-project\\src\\utils\\httpRequest.js","mtime":1564454131860},{"path":"E:\\exercises\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\exercises\\vue-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport http from \"axios\";\nimport Qs from \"qs\";\nhttp.defaults.timeout = 10000; // http.defaults.withCredentials = true;\n\nhttp.defaults.baseURL = \"http://127.0.0.1:8089\";\nhttp.interceptors.request.use(function (config) {\n  if (config.method == 'get') {\n    config.params = config.data;\n  }\n\n  if (config.formUrlencoded) {\n    if (config.method == 'post') {\n      config.data = Qs.stringify(config.data);\n    }\n  } else {\n    if (config.method == 'post') {\n      config.data = Qs.stringify(config.data);\n    }\n  }\n\n  return config;\n});\nhttp.interceptors.response.use(function (response) {\n  return Promise.resolve(response);\n});\n\nvar httpRequest = function httpRequest(methods, url, data) {\n  return new Promise(function (resolve, reject) {\n    http.request({\n      method: methods,\n      url: url,\n      data: data\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nexport default httpRequest;",{"version":3,"sources":["E:\\exercises\\vue-project\\src\\utils\\httpRequest.js"],"names":["Vue","http","Qs","defaults","timeout","baseURL","interceptors","request","use","config","method","params","data","formUrlencoded","stringify","response","Promise","resolve","httpRequest","methods","url","reject","then","res","catch","err"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,OAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEAD,IAAI,CAACE,QAAL,CAAcC,OAAd,GAAwB,KAAxB,C,CACA;;AACAH,IAAI,CAACE,QAAL,CAAcE,OAAd,GAAwB,uBAAxB;AAEAJ,IAAI,CAACK,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,UAACC,MAAD,EAAY;AACtC,MAAGA,MAAM,CAACC,MAAP,IAAiB,KAApB,EAA0B;AACtBD,IAAAA,MAAM,CAACE,MAAP,GAAgBF,MAAM,CAACG,IAAvB;AACH;;AACD,MAAGH,MAAM,CAACI,cAAV,EAAyB;AACrB,QAAGJ,MAAM,CAACC,MAAP,IAAiB,MAApB,EAA2B;AACvBD,MAAAA,MAAM,CAACG,IAAP,GAAcV,EAAE,CAACY,SAAH,CAAaL,MAAM,CAACG,IAApB,CAAd;AACH;AACJ,GAJD,MAIK;AACD,QAAGH,MAAM,CAACC,MAAP,IAAiB,MAApB,EAA2B;AACvBD,MAAAA,MAAM,CAACG,IAAP,GAAcV,EAAE,CAACY,SAAH,CAAaL,MAAM,CAACG,IAApB,CAAd;AACH;AACJ;;AACD,SAAOH,MAAP;AACH,CAdD;AAgBAR,IAAI,CAACK,YAAL,CAAkBS,QAAlB,CAA2BP,GAA3B,CAA+B,UAACO,QAAD,EAAc;AACzC,SAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAhB,CAAP;AACH,CAFD;;AAIA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAASC,GAAT,EAAaR,IAAb,EAAqB;AACrC,SAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAASI,MAAT,EAAmB;AAClCpB,IAAAA,IAAI,CAACM,OAAL,CAAa;AACTG,MAAAA,MAAM,EAACS,OADE;AAETC,MAAAA,GAAG,EAACA,GAFK;AAGTR,MAAAA,IAAI,EAACA;AAHI,KAAb,EAKCU,IALD,CAKM,UAAAC,GAAG,EAAG;AACRN,MAAAA,OAAO,CAACM,GAAD,CAAP;AACH,KAPD,EAQCC,KARD,CAQO,UAAAC,GAAG,EAAG;AACTJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACH,KAVD;AAWH,GAZM,CAAP;AAaH,CAdD;;AAeA,eAAeP,WAAf","sourcesContent":["import Vue from \"vue\";\r\nimport http from \"axios\";\r\nimport Qs from \"qs\";\r\n\r\nhttp.defaults.timeout = 10000;\r\n// http.defaults.withCredentials = true;\r\nhttp.defaults.baseURL = \"http://127.0.0.1:8089\";\r\n\r\nhttp.interceptors.request.use((config) => {\r\n    if(config.method == 'get'){\r\n        config.params = config.data\r\n    }\r\n    if(config.formUrlencoded){\r\n        if(config.method == 'post'){\r\n            config.data = Qs.stringify(config.data)\r\n        }\r\n    }else{\r\n        if(config.method == 'post'){\r\n            config.data = Qs.stringify(config.data)\r\n        }\r\n    }\r\n    return config\r\n})\r\n\r\nhttp.interceptors.response.use((response) => {\r\n    return Promise.resolve(response);\r\n})\r\n\r\nconst httpRequest = (methods,url,data) =>{\r\n    return new Promise((resolve,reject) =>{\r\n        http.request({\r\n            method:methods,\r\n            url:url,\r\n            data:data\r\n        })\r\n        .then(res =>{\r\n            resolve(res)\r\n        })\r\n        .catch(err =>{\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\nexport default httpRequest;\r\n"]}]}